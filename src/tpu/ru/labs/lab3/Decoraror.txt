Декоратор (Decorator)
Также может иметься в виду обертка (Wrapper).

Динамически возлагает на объект новые функции.
Декораторы применяются для расширения имеющейся функциональности и являются гибкой альтернативой порождению подклассов.

Применимость

для динамического, прозрачного для клиентов добавления обязанностей объектам;
для реализации обязанностей, которые могут быть сняты с объекта;
когда расширение путем порождения подклассов по каким-то причинам неудобно или невозможно. Иногда приходится реализовывать много независимых расширений, так что порождение подклассов для поддержки всех возможных комбинаций приведет к комбинаторному росту их числа. В других случаях определение класса может быть скрыто или почему-либо еще недоступно, так что породить от него подкласс нельзя.

Отношения
Декоратор переадресует запросы объекту. Может выполнять и дополнительные операции до и после переадресации.

Родственные паттерны
Адаптер: если декоратор изменяет только обязанности объекта, но не его интерфейс, то адаптер придает объекту совершенно новый интерфейс.
Компоновщик: декоратор можно считать вырожденным случаем составного объекта, у которого есть только один компонент.
Однако декоратор добавляет новые обязанности, агрегирование объектов не является его целью.
Стратегия: декоратор позволяет изменить внешний облик объекта, стратегия - его внутреннее содержание.
Это два взаимодополняющих способа изменения объекта.